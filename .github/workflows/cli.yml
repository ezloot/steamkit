name: CI

on:
  pull_request:
  push:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always
  NIGHTLY_TOOLCHAIN: nightly

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  format:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-stable-${{ hashFiles('**/Cargo.toml') }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends clang libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
      - name: Set up mold linker
        uses: rui314/setup-mold@v1
      - name: Clippy check
        run: cargo clippy -- -D warnings

  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-stable-${{ hashFiles('**/Cargo.toml') }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Install Linux dependencies
        if: ${{ runner.os == 'linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends lld clang
      - name: Set up mold linker
        if: ${{ runner.os == 'linux' }}
        uses: rui314/setup-mold@v1
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
